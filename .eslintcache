[{"E:\\portfolio\\src\\App.js":"1","E:\\portfolio\\src\\index.js":"2","E:\\portfolio\\src\\Widgets.js":"3","E:\\portfolio\\src\\firebase.js":"4","E:\\portfolio\\src\\SidebarOption.js":"5","E:\\portfolio\\src\\Post.js":"6","E:\\portfolio\\src\\TweetBox.js":"7","E:\\portfolio\\src\\StateProvider.js":"8","E:\\portfolio\\src\\Feed.js":"9","E:\\portfolio\\src\\reducer.js":"10","E:\\portfolio\\src\\Sidebar.js":"11"},{"size":303,"mtime":1602470015641,"results":"12","hashOfConfig":"13"},{"size":627,"mtime":1609681940465,"results":"14","hashOfConfig":"13"},{"size":962,"mtime":1609678540657,"results":"15","hashOfConfig":"13"},{"size":571,"mtime":1602470235644,"results":"16","hashOfConfig":"13"},{"size":292,"mtime":1602470482326,"results":"17","hashOfConfig":"13"},{"size":1395,"mtime":1602474503448,"results":"18","hashOfConfig":"13"},{"size":1764,"mtime":1609682756201,"results":"19","hashOfConfig":"13"},{"size":365,"mtime":1609681400408,"results":"20","hashOfConfig":"13"},{"size":811,"mtime":1609681726928,"results":"21","hashOfConfig":"13"},{"size":340,"mtime":1609681238744,"results":"22","hashOfConfig":"13"},{"size":1076,"mtime":1602470485466,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hq96e1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\portfolio\\src\\App.js",[],"E:\\portfolio\\src\\index.js",[],"E:\\portfolio\\src\\Widgets.js",[],["49","50"],"E:\\portfolio\\src\\firebase.js",[],"E:\\portfolio\\src\\SidebarOption.js",[],"E:\\portfolio\\src\\Post.js",[],"E:\\portfolio\\src\\TweetBox.js",["51"],"import { Avatar, Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nexport default function TweetBox() {\r\n  const [tweetMessage, setTweetMessage] = useState(\"\");\r\n  const [tweetImage, setTweetImage] = useState(\"\");\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"SET_POST\",\r\n      post: {\r\n        displayName: \"Shahid Afridi\",\r\n        Username: \"Shahid\",\r\n        verified: true,\r\n        text: tweetMessage,\r\n        image: tweetImage,\r\n        avatar:\r\n          \"https://dailytimes.com.pk/assets/uploads/2020/06/Shahid-Afridi-Age-Height-Weight-Wife-Affairs_resize.png\",\r\n      },\r\n    });\r\n    setTweetMessage(\"\");\r\n    setTweetImage(\"\");\r\n  };\r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar\r\n            src={\r\n              \"https://dailytimes.com.pk/assets/uploads/2020/06/Shahid-Afridi-Age-Height-Weight-Wife-Affairs_resize.png\"\r\n            }\r\n          />\r\n          <input\r\n            onChange={(e) => setTweetMessage(e.target.value)}\r\n            value={tweetMessage}\r\n            placeholder=\"What's Happening\"\r\n          />\r\n        </div>\r\n        <input\r\n          value={tweetImage}\r\n          onChange={(e) => setTweetImage(e.target.value)}\r\n          className=\"tweetBox__imageInput\"\r\n          placeholder=\"Optional: Enter Image URL\"\r\n          type=\"text\"\r\n        />\r\n        <Button\r\n          disabled={!tweetMessage}\r\n          onClick={sendTweet}\r\n          className=\"tweetBox__tweetButton\"\r\n        >\r\n          Tweet\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","E:\\portfolio\\src\\StateProvider.js",[],"E:\\portfolio\\src\\Feed.js",["52"],"import React from \"react\";\r\nimport \"./Feed.css\";\r\nimport TweetBox from \"./TweetBox\";\r\nimport Post from \"./Post\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Feed() {\r\n  const [{ posts }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__header\">\r\n        <h2>Home</h2>\r\n      </div>\r\n      <TweetBox />\r\n      <FlipMove>\r\n        {posts.map((post, i) => (\r\n          <Post\r\n            key={i}\r\n            displayName={post.displayName}\r\n            Username={post.Username}\r\n            verified={post.verified}\r\n            text={post.text}\r\n            image={post.image}\r\n            avatar={post.avatar}\r\n          />\r\n        ))}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","E:\\portfolio\\src\\reducer.js",[],"E:\\portfolio\\src\\Sidebar.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":9,"column":21,"nodeType":"63","messageId":"64","endLine":9,"endColumn":29},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]